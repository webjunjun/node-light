#!/usr/bin/env node
// 行首第一句是告诉用node执行程序

/**
 * 模块依赖的包
 */
const app = require('../app');
const debug = require('debug')('express-locallibrary-tutorial:server');
const http = require('http');

/**
 * 获取到当前环境的端口号，将其存入express
 */
const port = normalizePort(process.env.PORT || '3001');
app.set('port', port);

/**
 * 创建http服务器
 */
const server = http.createServer(app);

/**
 * 监听该端口下的所有网络接口
 */
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * 初始化网络端口的函数
 */
function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

/**
 * 错误事件监听
 */
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // 友好的展示特定错误提示信息
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * listening事件监听
 */
function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
